require_relative 'deck'

class Game
  attr_accessor :suma, :carta, :pc_sum, :pc_carta

  def initialize
    @suma = 0         # Сумма очков игрока
    @carta = " "      # Строка, содержащая карты игрока
    @pc_sum = 0       # Сумма очков компьютера
    @pc_carta = " "   # Строка, содержащая карты компьютера
  end

  # Метод для раздачи карт игроку
  def carta
    random = CALODA2.sample # Случайный выбор карты из массива
    @suma += CALODA1[random] # Добавляем очки карты к сумме игрока
    @carta += " #{random}"   # Добавляем карту в строку с картами игрока
  end

  # Основной игровой процесс
  def play
    carta # Выдача первой карты
    carta # Выдача второй карты
    puts "Ваши карты: #{@carta}, сумма которых равна #{@suma}"
    puts "Еще (1) Хватит (2)"

    loop do
      if @suma >= 22 # Проверка на перебор очков
        puts "У вас перебор (#{@suma}) вы проиграли"
        exit # Завершаем игру, если перебор
      end

      hod = gets.to_i # Получаем выбор игрока (1 - взять карту, 0 - остановиться)

      if hod == 1 # Если игрок хочет взять карту
        carta # Выдаем еще одну карту
        puts "Ваши карты: #{@carta}, сумма которых равна #{@suma}" # Показываем обновленные карты и сумму
        puts "Еще (1) Хватит (2)" # Снова предлагаем выбор
      elsif hod == 2 # Если игрок решает остановиться
        break # Выход из цикла
      end
    end

    pc_play # Запускаем ход компьютера
    result # Подсчитываем и выводим результат
  end

  # Логика игры для компьютера
  def pc_play
    loop do
      break if @pc_sum >= 17 # Компьютер останавливается, если сумма очков >= 17

      random = CALODA2.sample # Случайный выбор карты для компьютера
      if @carta.split.include?(random) # Проверка, чтобы карта не совпадала с картами игрока
        next # Если совпадает, продолжаем цикл
      else
        @pc_sum += CALODA1[random] # Добавляем очки к сумме компьютера
        @pc_carta += " #{random}"   # Добавляем карту в строку с картами компьютера
      end
    end
  end

  # Подсчет и вывод результата игры
  def result
    if @pc_sum >= 22 # Проверка на перебор у компьютера
      puts "Вы победили, у ПК перебор: #{@pc_carta} (#{@pc_sum})"
    elsif @suma == @pc_sum # Проверка на ничью
      puts "Ничья! Карты ПК: #{@pc_carta} (#{@pc_sum})"
    elsif @suma > @pc_sum # Проверка на победу игрока
      puts "Победа! Карты ПК: #{@pc_carta} (#{@pc_sum})"
    else # В противном случае, игрок проигрывает
      puts "Поражение :с Карты ПК: #{@pc_carta} (#{@pc_sum})"
    end
  end
end